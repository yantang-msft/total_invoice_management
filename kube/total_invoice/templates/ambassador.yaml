{{- $service_name := "ambassador-svc" }}
{{- $context := (dict "service_name" $service_name "Values" .Values "Release" .Release) }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $service_name }}
  namespace: {{ .Values.namespace }}
rules:
- apiGroups: [""]
  resources:
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create", "update", "patch", "get", "list", "watch"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "watch"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  {{ $service_name }}
  namespace: {{ .Values.namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  {{ $service_name }}
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  {{ $service_name }}
subjects:
- kind: ServiceAccount
  name:  {{ $service_name }}
  namespace: {{ .Values.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ $service_name }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "total_invoice.std.labels" $context | indent 4 }}
spec:
  replicas: {{ .Values.replica_count }}
  selector:
    matchLabels:
{{ include "total_invoice.std.labels" $context | indent 6 }}
  template:
    metadata:
      labels:
{{ include "total_invoice.std.labels" $context | indent 8 }}
    spec:
      serviceAccountName: {{ $service_name }}
      containers:
      - name: {{ $service_name }}
        image: {{ .Values.ambassador_svc_image }}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 3
          periodSeconds: 3
      - name: statsd
        image: {{ .Values.ambassador_svc_statsd_image }}
        imagePullPolicy: Always
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: {{ $service_name }}
{{ include "total_invoice.std.labels" $context | indent 4 }}
  name: {{ $service_name }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - name: {{ $service_name }}
    port: 80
    targetPort: 80
  selector:
{{ include "total_invoice.std.labels" $context | indent 4 }}

---
apiVersion: v1
kind: Service
metadata:
  labels:
{{ include "total_invoice.std.labels" $context | indent 4 }}
    service: {{ $service_name }}-admin
  name: {{ $service_name }}-admin
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  ports:
  - name: {{ $service_name }}-admin
    port: 8877
    targetPort: 8877
  selector:
{{ include "total_invoice.std.labels" $context | indent 4 }}