{{- $service_name := "auth-svc" }}
{{- $context := (dict "service_name" $service_name "Values" .Values "Release" .Release) }}

{{ include "total_invoice.authorizationAssets" $context }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
{{ include "total_invoice.std.labels" $context | indent 4 }}
  name: {{ $service_name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replica_count }}
  selector:
    matchLabels:
{{ include "total_invoice.std.labels" $context | indent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
{{ include "total_invoice.std.labels" $context | indent 8 }}
    spec:
      serviceAccountName: {{ $service_name }}
      containers:
      - image: {{ .Values.auth_svc_image }}
        imagePullPolicy: Always
        name: {{ $service_name }}
        env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: total-invoice-secrets
              key: auth_token
{{ include "total_invoice.k8s.envvars" $context | indent 8 }}
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: {{ $service_name }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "total_invoice.std.labels" $context | indent 4 }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Module
      name:  authentication
      config:
        auth_service: {{ $service_name }}:3000
spec:
  selector:
{{ include "total_invoice.std.labels" $context | indent 4 }}
  ports:
  - port: 3000
    name: {{ $service_name }}
    targetPort: 8080